// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  extensions = [pg_trgm, pgcrypto]
}

model User {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clerkId       String        @unique
  email         String        @unique
  firstName     String?
  lastName      String?
  conversations Conversation[]
  messages      Message[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([clerkId], name: "user_clerk_id_idx")
  @@index([email], name: "user_email_idx")
}

model Conversation {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  userId      String    @db.Uuid
  user        User      @relation(fields: [userId], references: [id])
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId], name: "conversation_user_id_idx")
}

model Message {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content        String       @db.Text
  role           String       // 'user' or 'assistant'
  conversationId String       @db.Uuid
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  userId         String       @db.Uuid
  user           User         @relation(fields: [userId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([conversationId], name: "message_conversation_id_idx")
  @@index([userId], name: "message_user_id_idx")
}
